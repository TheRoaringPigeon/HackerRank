/*
Consider the following:

A string, s, of length n where s = c0c1...cn-1.
An integer, k, where k is a factor of n.
We can split s into n/k substrings where each subtring, Ti, consists of a contiguous block of k characters in s. 
Then, use each Ti to create string Ui such that:

The characters in Ui are a subsequence of the characters in Ti.
Any repeat occurrence of a character is removed from the string such that each character in Ui occurs exactly once. 
In other words, if the character at some index j in Ti occurs at a previous index <j in Ti, then do not include the character in string Ui.
Given s and k, print n/k lines where each line i denotes string Ui.
*/




def merge_the_tools(string, k):
    # your code goes here
    for i in range(0, len(string), k):
        sub = ''
        for c in string[i : i + k]:
            if c not in sub:
                sub += c
        print(sub)

if __name__ == '__main__':
    string, k = input(), int(input())
    merge_the_tools(string, k)
